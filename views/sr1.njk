{% extends "layouts/app-journey.njk" %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "casa/components/input/macro.njk" import casaGovukInput with context %}
{% from "casa/components/textarea/macro.njk" import casaGovukTextarea with context %}
{% from "casa/components/date-input/macro.njk" import casaGovukDateInput with context %}
{% from "casa/components/radios/macro.njk" import casaGovukRadios with context %}
{% from "casa/components/character-count/macro.njk" import casaGovukCharacterCount with context %}

{% from "macros/components.njk" import govukDateInputApprox with context %}
{% from "macros/site.njk" import fmtTitle with context %}

{% block casaPageTitle %}
  {{ fmtTitle('sr1:pageTitle') }}
{% endblock %}

{% macro dateInput(name, formData, formErrors, parts=['day', 'month', 'year']) %}
{{ casaGovukDateInput({
      id: name,
      namePrefix: name,
      casaValue: formData[name],
      hint: {
        text: t('sr1:' + name + '.hint')
      },
      fieldset: {
        legend: {
          text: t('sr1:' + name + '.label'),
          classes: "govuk-label--m"
        }
      },
      items: [
        {
          name: 'day',
          attributes: {
            'data-parsley-required': true,
            'data-parsley-required-message': t('sr1:' + name + '[dd].empty'),
            'data-parsley-range': "[1,31]",
            'data-parsley-range-message': t('sr1:' + name + '[dd].range'),
            'data-parsley-type': "number",
            'data-parsley-type-message': t('sr1:' + name + '[dd].range'),
            'data-parsley-invalid-message':t('sr1:' + name + '.invalid'),
            'data-parsley-future-message':t('sr1:' + name + '.future'),
            'data-parsley-errors-container': '#' + name + '-error',
            'data-parsley-trigger': "focusout"
          }
        },
        {
          name: 'month',
          attributes: {
            'data-parsley-required': true,
            'data-parsley-required-message': t('sr1:' + name + '[mm].empty'),
            'data-parsley-range': "[1,12]",
            'data-parsley-range-message': t('sr1:' + name + '[mm].range'),
            'data-parsley-type': "number",
            'data-parsley-type-message': t('sr1:' + name + '[mm].range'),
            'data-parsley-errors-container': '#' + name + '-error',
            'data-parsley-trigger': "focusout"
          }
        },
        {
          name: 'year',
          attributes: {
            'data-parsley-required': true,
            'data-parsley-required-message': t('sr1:' + name + '[yyyy].empty'),
            'data-parsley-range': "[1890,2115]",
            'data-parsley-range-message': t('sr1:' + name + '[yyyy].range'),
            'data-parsley-type': "number",
            'data-parsley-type-message': t('sr1:' + name + '[yyyy].range'),
            'data-parsley-errors-container': '#' + name + '-error',
            'data-parsley-trigger': "focusout"
          }
        }
      ],
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}
{% endmacro %}


{% block beforeContent %}
{{ super() }}
<nav>
  {{ govukBackLink({
    text: "Back",
    href: casa.journeyPreviousUrl
  }) }}
</nav>
{% endblock %}

{% block journey_form %}
  {# Wrap your form in a CASA <form>, complete with submit/cancel buttons #}
    <h1 class="govuk-heading-xl">
      {{t('sr1:pageHeader')}}
    </h1>
    <p>{{t('sr1:p')}}</p>
    <h2 class="govuk-heading-l">{{t('sr1:patientDetailsHeader')}}</h2>
    {# A simple input to gather the name #}
    {# <div id="patientName-error" class="validation-message"></div> #}
    {{ casaGovukInput({
      name: 'patientName',
      value: formData.patientName,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:patientName.label')
      },
      pattern: "^([A-Za-z](([A-Za-z]|'|\.|-|\s)?[A-Za-z])*)?",
      casaErrors: formErrors,
      attributes: {
        'data-parsley-required': "true",
        'data-parsley-required-message': t('sr1:patientName.empty'),
        'data-parsley-pattern': "^([A-Za-z](([A-Za-z]|'|\.|-|\s)?[A-Za-z])*)?",
        'data-parsley-pattern-message': t('sr1:patientName.pattern'),
        'data-parsley-class-handler': "#patientName-group",
        'data-parsley-errors-container': "#patientName-error",
        'data-parsley-trigger': "focusout"
      }
    }) }}

    {{ casaGovukTextarea({
      name: 'patientAddress',
      value: formData.patientAddress,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:patientAddress.label')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:patientAddress.empty'),
        'data-parsley-invalidcharacters':"patientAddress",
        'data-parsley-invalidcharacters-message': t('sr1:patientAddress.invalid'),
        'data-parsley-class-handler':"#patientAddress-group",
        'data-parsley-errors-container':"#patientAddress-error",
        'data-parsley-trigger':"focusout keyup"
      },
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {{ casaGovukInput({
      name: 'patientPostcode',
      value: formData.patientPostcode,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:patientPostcode.label')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:patientPostcode.empty'),
        'data-parsley-maxlength':"8",
        'data-parsley-maxlength-message': t('sr1:patientPostcode.tooLong'),
        'data-parsley-pattern':"/^(?![QVX])[A-Z]((?![IJZ])[A-Z][0-9](([0-9]?)|([ABEHMNPRVWXY]?))|([0-9]([0-9]?|[ABCDEFGHJKPSTUW]?))) ?[0-9]((?![CIKMOV])[A-Z]){2}$|^(BFPO)[ ]?[0-9]{1,4}$/i",
        'data-parsley-pattern-message': t('sr1:patientPostcode.invalid'),
        'data-parsley-invalidcharacters':"patientPostcode",
        'data-parsley-invalidcharacters-message': t('sr1:patientPostcode.invalidChars'),
        'data-parsley-class-handler':"#patientPostcode-group",
        'data-parsley-errors-container':"#patientPostcode-error",
        'data-parsley-trigger':"focusout"
      },
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {{ dateInput('patientDateOfBirth', formData, formErrors) }}

    {{ casaGovukInput({
      name: 'patientNino',
      value: formData.patientNino,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:patientNino.label')
      },
      attributes: {
        'data-parsley-pattern':"/^(?!BG|GB|NK|KN|TN|NT|ZZ)[A-CEGHJ-PR-TW-Za-ceghj-pr-tw-z]{1}[A-CEGHJ-NPR-TW-Za-ceghj-npr-tw-z]{1}[0-9]{6}[A-Da-d]{1}$/",
        'data-parsley-pattern-message': t('sr1:patientNino.pattern'),
        'data-parsley-class-handler':"#patientNino-group",
        'data-parsley-errors-container':"#patientNino-error",
        'data-parsley-trigger':"focusout"
      },
      classes: "govuk-!-width-two-thirds",
      hint: {
        text: t('sr1:patientNino.hint')
      },
      casaErrors: formErrors
    }) }}

  <h2 class="govuk-heading-l">{{ t('sr1:diagnosisHeading') }}</h2>

  <div class="form-group">

    {{ casaGovukCharacterCount({
      name: 'diagnosis',
      value: formData.diagnosis,
      maxlength: 126,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:diagnosis.label')
      },
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {# {{ dateInput('dateOfDiagnosis', formData, formErrors) }} #}
    {{ govukDateInputApprox({
      id: 'dateOfDiagnosis',
      name: 'dateOfDiagnosis',
      namePrefix: 'dateOfDiagnosis',
      hint: {
        text: t('sr1:dateOfDiagnosis.hint')
      },
      fieldset: {
        legend: {
          text: t('sr1:dateOfDiagnosis.label'),
          classes: "govuk-label--m"
        }
      },
      casaValue: formData.dateOfDiagnosis,
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {{ casaGovukCharacterCount({
      name: 'otherDiagnoses',
      maxlength: 132,
      value: formData.otherDiagnoses,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:otherDiagnoses.label')
      },
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {{ casaGovukRadios({
      name: 'patientAware',
      casaValue: formData.patientAware,
      fieldset: {
        legend: {
          classes: "govuk-label--m",
          text: t('sr1:patientAware.label')
        }
      },
      items: [
        {text: 'Yes', value: t('common:yes')},
        {text: 'No', value: t('common:no')}
      ],
      attributes: {
        'data-parsley-multiple':"patientAware",
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:patientAware.empty'),
        'data-parsley-class-handler':"#patientAware-group",
        'data-parsley-errors-container':"#patientAware-error",
        'data-parsley-trigger':"focusout"
      },
      classes: "govuk-!-width-two-thirds govuk-radios--inline",
      casaErrors: formErrors
    }) }}

    {# representativeFields #}
    {% set representativeFields %}
    <h3 class="govuk-heading-m" >{{ t('sr1:repDetailsHeading') }}</h3>
    {{ casaGovukInput({
      name: 'representativeName',
      value: formData.representativeName,
      label: {
        classes: "govuk-label--s",
        text: t('sr1:representativeName.label')
      },
      attributes: {
        'data-parsley-invalidcharacters':"representativeName",
        'data-parsley-invalidcharacters-message': t('sr1:representativeName.invalid'),
        'data-parsley-class-handler':"#representativeName-group",
        'data-parsley-errors-container':"#representativeName-error",
        'data-parsley-trigger':"focusout"
      },
      casaErrors: formErrors
    }) }}

    {{ casaGovukTextarea({
      name: 'representativeAddress',
      value: formData.representativeAddress,
      label: {
        classes: "govuk-label--s",
        text: t('sr1:representativeAddress.label')
      },
      attributes: {
        'data-parsley-invalidcharacters':"representativeAddress",
        'data-parsley-invalidcharacters-message': t('sr1:representativeAddress.invalid'),
        'data-parsley-class-handler':"#representativeAddress-group",
        'data-parsley-errors-container':"#representativeAddress-error",
        'data-parsley-trigger':"focusout"
      },
      casaErrors: formErrors
    }) }}

    {{ casaGovukInput({
      name: 'representativePostcode',
      value: formData.representativePostcode,
      label: {
        classes: "govuk-label--s",
        text: t('sr1:representativePostcode.label')
      },
      attributes: {
        'data-parsley-maxlength':"8",
        'data-parsley-maxlength-message':t('sr1:representativePostcode.tooLong'),
        'data-parsley-pattern':"/^(?![QVX])[A-Z]((?![IJZ])[A-Z][0-9](([0-9]?)|([ABEHMNPRVWXY]?))|([0-9]([0-9]?|[ABCDEFGHJKPSTUW]?))) ?[0-9]((?![CIKMOV])[A-Z]){2}$|^(BFPO)[ ]?[0-9]{1,4}$/i",
        'data-parsley-pattern-message': t('sr1:representativePostcode.invalid'),
        'data-parsley-invalidcharacters':"representativePostcode",
        'data-parsley-invalidcharacters-message': t('sr1:representativePostcode.invalidChars'),
        'data-parsley-class-handler':"#representativePostcode-group",
        'data-parsley-errors-container':"#representativePostcode-error",
        'data-parsley-trigger':"focusout"
      },
      casaErrors: formErrors
    }) }}
    {% endset %}

    {{ casaGovukRadios({
      name: 'formRequester',
      casaValue: formData.formRequester,
      attributes: {
        'data-parsley-multiple':"formRequester",
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:formRequester.empty'),
        'data-parsley-class-handler':"#formRequester-group",
        'data-parsley-errors-container':"#formRequester-error",
        'data-parsley-trigger':"focusout"
      },
      fieldset: {
        legend: {
          classes: "govuk-label--m",
          text: t('sr1:formRequester.label')
        }
      },
      items: [
        {
          text: 'Patient',
          value: t('sr1:formRequester.options.patient')
        },
        {
          text: 'Representative',
          value: t('sr1:formRequester.options.representative'),
          conditional: {
            html: representativeFields
          }
          }
      ],
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}
  </div>

  <h2 class="govuk-heading-l">{{ t('sr1:clinicalHeading') }}</h2>

  <div class="form-group">
    {{ casaGovukCharacterCount({
      name: 'clinicalFeatures',
      maxlength: 236,
      value: formData.clinicalFeatures,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:clinicalFeatures.label')
      },
      hint: {
        text: t('sr1:clinicalFeatures.hint')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message':t('sr1:clinicalFeatures.empty'),
        'data-parsley-maxlength':"236",
        'data-parsley-maxlength-message':t('sr1:clinicalFeatures.tooLong'),
        'data-parsley-invalidcharacters':"clinicalFeatures",
        'data-parsley-invalidcharacters-message':t('sr1:clinicalFeatures.invalid'),
        'data-parsley-class-handler':"#clinicalFeatures-group",
        'data-parsley-errors-container':"#clinicalFeatures-error",
        'data-parsley-trigger':"focusout keyup"
      },
      casaErrors: formErrors
    }) }}
  </div>

  <h2 class="govuk-heading-l">{{ t('sr1:treatmentHeading') }}</h2>

  <div class="form-group">
    {{ casaGovukCharacterCount({
      name: 'treatment',
      maxlength: 160,
      value: formData.treatment,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:treatment.label')
      },
      hint: {
        text: t('sr1:treatment.hint')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message':t('sr1:treatment.empty'),
        'data-parsley-maxlength':"160",
        'data-parsley-maxlength-message':t('sr1:treatment.tooLong'),
        'data-parsley-invalidcharacters':"treatment",
        'data-parsley-invalidcharacters-message':t('sr1:treatment.invalid'),
        'data-parsley-class-handler':"#treatment-group",
        'data-parsley-errors-container':"#treatment-error",
        'data-parsley-trigger':"focusout keyup"
      },
      casaErrors: formErrors
    }) }}

    {{ casaGovukCharacterCount({
      name: 'otherIntervention',
      maxlength: 120,
      value: formData.otherIntervention,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:otherIntervention.label')
      },
      hint: {
          text: t('sr1:otherIntervention.hint')
      },
      attributes: {
        'data-parsley-maxlength':"120",
        'data-parsley-maxlength-message':t('sr1:otherIntervention.tooLong'),
        'data-parsley-invalidcharacters':"otherIntervention",
        'data-parsley-invalidcharacters-message': t('sr1:otherIntervention.invalid'),
        'data-parsley-class-handler':"#otherIntervention-group",
        'data-parsley-errors-container':"#otherIntervention-error",
        'data-parsley-trigger':"focusout keyup"
      },
      casaErrors: formErrors
    }) }}
  </div>

  <h2 class="govuk-heading-l">{{ t('sr1:yourDetailsHeading') }}</h2>



  <div class="form-group">


    {% set gmcNumberInput %}
      {{ casaGovukInput({
        name: 'gmcNumber',
        value: formData.gmcNumber,
        label: {
          classes: "govuk-label--m",
          text: t('sr1:gmcNumber.label')
        },
        attributes: {
          'data-parsley-requireifmedicalrelationvisible':"declaration",
          'data-parsley-requireifmedicalrelationvisible-message':t('sr1:gmcNumber.empty'),
          'data-parsley-validate-if-empty':"true",
          'data-parsley-validate-if-empty-message':"",
          'data-parsley-maxlength':"7",
          'data-parsley-gmcpattern':"7",
          'data-parsley-gmcpattern-message':t('sr1:gmcNumber.tooShort'),
          'data-parsley-maxlength-message':t('sr1:gmcNumber.tooLong'),
          'data-parsley-pattern':"^(?!0000000)[0-9]*$",
          'data-parsley-pattern-message': t('sr1:gmcNumber.pattern'),
          'data-parsley-class-handler':"#gmcNumber-group",
          'data-parsley-errors-container':"#gmcNumber-error",
          'data-parsley-trigger':"focusout",
          'tabindex': gmcNumberInputTabIndex
        },
        formGroup: {
          classes: gmcNumberClasses
        },
        classes: "govuk-!-width-two-thirds",
        casaErrors: formErrors
      }) }}
    {% endset -%}

    {% set gmcNumberConsultantInput %}
      {{ casaGovukInput({
        name: 'gmcNumberConsultant',
        value: formData.gmcNumberConsultant,
        label: {
          classes: "govuk-label--m",
          text: t('sr1:gmcNumberConsultant.label')
        },
        attributes: {
          'data-parsley-requireifmedicalrelationvisible':"declaration",
          'data-parsley-requireifmedicalrelationvisible-message':t('sr1:gmcNumberConsultant.empty'),
          'data-parsley-validate-if-empty':"true",
          'data-parsley-validate-if-empty-message':"",
          'data-parsley-maxlength':"7",
          'data-parsley-gmcpattern':"7",
          'data-parsley-gmcpattern-message':t('sr1:gmcNumberConsultant.tooShort'),
          'data-parsley-maxlength-message':t('sr1:gmcNumberConsultant.tooLong'),
          'data-parsley-pattern':"^(?!0000000)[0-9]*$",
          'data-parsley-pattern-message': t('sr1:gmcNumberConsultant.pattern'),
          'data-parsley-class-handler':"#gmcNumber-group",
          'data-parsley-errors-container':"#gmcNumber-error",
          'data-parsley-trigger':"focusout",
          'tabindex': gmcNumberInputTabIndex
        },
        formGroup: {
          classes: gmcNumberClasses
        },
        classes: "govuk-!-width-two-thirds",
        casaErrors: formErrors
      }) }}
    {% endset -%}

    {% set declarationAdditionalInput %}
      {{ casaGovukInput({
        name: 'declarationAdditionalDetail',
        value: formData.declarationAdditionalDetail,
        label: {
          classes: "govuk-label--m",
          text: t('sr1:declarationAdditionalDetail.label')
        },
        formGroup: {
          classes: additionalDetailClasses
        },
        attributes: {
          'data-parsley-class-handler':"#declarationAdditionalDetail-group",
          'data-parsley-errors-container':"#declarationAdditionalDetail-error",
          'data-parsley-requireifotherrelationvisible':"declaration",
          'data-parsley-requireifotherrelationvisible-message':t('sr1:declarationAdditionalDetail.empty'),
          'data-parsley-validate-if-empty':"true",
          'data-parsley-trigger':"focusout",
          'data-parsley-invalidcharacters':"declarationAdditionalDetail",
          'data-parsley-invalidcharacters-message':t('sr1:declarationAdditionalDetail.invalid'),
          'tabindex': additionalDetailInputTabIndex
        },
        classes: "govuk-!-width-two-thirds",
        casaErrors: formErrors
      }) }}
    {% endset -%}

    {{ casaGovukRadios({
      name: 'declaration',
      casaValue: formData.declaration,
      attributes: {
        'data-parsley-multiple':"declaration",
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:declaration.empty'),
        'data-parsley-class-handler':"#declaration-group",
        'data-parsley-errors-container':"#declaration-error",
        'data-parsley-trigger':"focusout"
      },
      fieldset: {
        legend: {
          classes: "govuk-label--m",
          text: t('sr1:declaration.label')
        }
      },
      items: [
        {
          text: t('sr1:declaration.options.sn'),
          value: t('sr1:declaration.options.sn')
        },
        {
          text: t('sr1:declaration.options.gp'),
          value: t('sr1:declaration.options.gp'),
          conditional: {
            html: gmcNumberInput
          }
        },
        {
          text: t('sr1:declaration.options.gmc'),
          value: t('sr1:declaration.options.gmc'),
          conditional: {
            html: gmcNumberConsultantInput
          }
        },
        {
          text: t('sr1:declaration.options.other'),
          value: t('sr1:declaration.options.other'),
          conditional: {
            html: declarationAdditionalInput
          }
        }
      ],
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

    {{ casaGovukInput({
      name: 'gpName',
      value: formData.gpName,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:gpName.label')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message': t('sr1:gpName.empty'),
        'data-parsley-invalidcharacters':"gpName",
        'data-parsley-invalidcharacters-message':t('sr1:gpName.invalid'),
        'data-parsley-class-handler':"#gpName-group",
        'data-parsley-errors-container':"#gpName-error",
        'data-parsley-trigger':"focusout"
      },
      casaErrors: formErrors
    }) }}


    {{ casaGovukTextarea({
      name: 'gpAddress',
      value: formData.gpAddress,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:gpAddress.label')
      },
      classes: "govuk-!-width-two-thirds",
      hint: {
        text: t('sr1:gpAddress.hint')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message':t('sr1:gpAddress.empty'),
        'data-parsley-invalidcharacters':"gpAddress",
        'data-parsley-invalidcharacters-message':t('sr1:gpAddress.invalid'),
        'data-parsley-class-handler':"#gpAddress-group",
        'data-parsley-errors-container':"#gpAddress-error",
        'data-parsley-trigger':"focusout keyup"
      },
      casaErrors: formErrors
    }) }}

    {{ casaGovukInput({
      name: 'gpPhone',
      value: formData.gpPhone,
      label: {
        classes: "govuk-label--m",
        text: t('sr1:gpPhone.label')
      },
      attributes: {
        'data-parsley-required':"true",
        'data-parsley-required-message':t('sr1:gpPhone.empty'),
        'data-parsley-invalidcharacters':"gpPhone",
        'data-parsley-invalidcharacters-message':t('sr1:gpAddress.invalid'),
        'data-parsley-class-handler':"#gpPhone-group",
        'data-parsley-errors-container':"#gpPhone-error",
        'data-parsley-trigger':"focusout keyup"
      },
      classes: "govuk-!-width-two-thirds",
      casaErrors: formErrors
    }) }}

  </div>

  {{
    govukButton({
      text: t('common:btnContinue'),
      type: 'submit'
    })
  }}

{% endblock %}

{% block bodyEnd %}
  {{super()}}
  <script nonce="{{cspNonce}}" src="{{ casa.mountUrl }}js/validation-declaration.js"></script>
  <script nonce="{{ cspNonce }}" src="{{ casa.mountUrl }}js/conditional-radios-accessibility.js"></script>
{% endblock %}
